[{"line":1,"elements":[{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')","result":{"duration":3414000,"error_message":"js failed:\n>>>>\n01: Java.type('co.cobre.lib.qa.aws.S3Util')\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: Access to host class co.cobre.lib.qa.aws.S3Util is not allowed or does not exist.\n- <js>.:program(Unnamed:1)\n\nclasspath:acceptance\/test\/resources\/utils\/utils.feature:3","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":3,"doc_string":{"content_type":"","value":"16:40:50.968 classpath:acceptance\/test\/resources\/utils\/utils.feature:3\n* def S3Manager = Java.type('co.cobre.lib.qa.aws.S3Util')\njs failed:\n>>>>\n01: Java.type('co.cobre.lib.qa.aws.S3Util')\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: Access to host class co.cobre.lib.qa.aws.S3Util is not allowed or does not exist.\n- <js>.:program(Unnamed:1)\n\nclasspath:acceptance\/test\/resources\/utils\/utils.feature:3\n","line":3}},{"name":"def S3ManagerInstance = new S3Manager()","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def FileUtils = Java.type('co.cobre.lib.qa.util.FileUtils')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def waitTime = function(seconds) { java.lang.Thread.sleep(seconds * 1000) }","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6}]},{"start_timestamp":"2025-07-12T21:40:50.963Z","line":8,"name":"Subir y verificar archivo en S3","description":"","id":"subir-y-verificar-archivo-en-s3","type":"scenario","keyword":"Scenario","steps":[{"name":"def result = FileUtils.renameFile(currentFilePath, currentFileName, newPathNewFile, uuid, fileExtension)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"match result == true","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def fullFileName = uuid + fileExtension","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"S3ManagerInstance.uploadFileToBucket(bucketName, folderRecaudoFiles, fullFileName, newPathNewFile)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def fileExist = S3ManagerInstance.doesFileExist(bucketName, folderRecaudoFiles, fullFileName)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"match fileExist == true","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"karate.set('fullFileName', fullFileName)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}],"tags":[]}],"name":"acceptance\/test\/resources\/utils\/utils.feature","description":"Funciones comunes","id":"funciones-comunes","keyword":"Feature","uri":"acceptance\/test\/resources\/utils\/utils.feature"}]